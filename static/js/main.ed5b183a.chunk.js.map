{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChahge","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","label","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","onDelete","list","map","id","item","onClick","Filter","Section","children","section","App","filter","formSubmitHandler","contact","v4","find","toLowerCase","alert","changeFilter","e","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","snapshot","setItem","stringify","filteredContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed5b183a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1MED0\",\"label\":\"ContactForm_label__1AWqF\",\"input\":\"ContactForm_input__CBacW\",\"button\":\"ContactForm_button__1yUm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2i_9q\",\"item\":\"ContactList_item__34l5u\",\"button\":\"ContactList_button__2-oS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3CcgX\",\"label\":\"Filter_label__2jXoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1QUiW\"};","import {Component} from \"react\";\r\nimport styles from './ContactForm.module.css'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleInputChahge = event =>{\r\n        const {name, value} = event.currentTarget\r\n        this.setState({[name] : value})\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n\r\n            <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                <label className={styles.label}> Name\r\n                    <input className={styles.input}\r\n                           onChange={this.handleInputChahge}\r\n                           value={name}\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                           required\r\n                    />\r\n                </label>\r\n                <label className={styles.label}> Number\r\n                    <input className={styles.input}\r\n                           onChange={this.handleInputChahge}\r\n                           value={number}\r\n                           type=\"tel\"\r\n                           name=\"number\"\r\n                           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                           title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                           required\r\n                    />\r\n                </label>\r\n                <button type=\"Submit\" className={styles.button}>Add</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ContactForm","import PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\n\r\n\r\nconst ContactList = ({contacts, onDelete }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({ id, name, number}) => (\r\n                <li key={id} className={styles.item}>\r\n                    {name}: {number}\r\n                    <button onClick={() => onDelete(id)} type=\"button\" className={styles.button}>DELETE</button>\r\n\r\n                </li>\r\n\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label className={styles.label}>\r\n        <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n    </label>\r\n)\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter","import PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\nconst Section = ({children}) => (\r\n    <section className={styles.section}> {children}\r\n    </section>\r\n)\r\nSection.propTypes = {children: PropTypes.node,\r\n};\r\nexport default Section","import {Component} from \"react\";\nimport { v4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport Section from \"./components/Section\";\n\n\n\nclass App extends Component {\n\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n        contacts.find(\n            ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n        )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value\n    })\n  }\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {contacts, filter} = this.state\n    const filteredContacts = contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n\n    );\n    return (\n        <Section>\n\n\n          <h1>Phonebook</h1>\n          <ContactForm  onSubmit = {this.formSubmitHandler}/>\n\n          <h2>Contacts</h2>\n          <h2>Find contacts by name</h2>\n\n          <Filter value={filter} onChange={this.changeFilter} />\n\n          <ContactList  onDelete ={this.deleteContact} contacts={filteredContacts}/>\n\n\n        </Section>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}